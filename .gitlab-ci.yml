stages:
  - test
  - lint
  - build
  - deploy

variables:
  DOCKER_IMAGE: mortgage-calculator
  DOCKER_TLS_CERTDIR: ""

# Общий шаблон для тестов
.test_template: &test_definition
  stage: test
  image: python:3.9-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - python -m pytest app/ -v

unit_tests:
  <<: *test_definition

integration_tests:
  <<: *test_definition
  script:
    - python -m pytest app/ -v --tb=long

lint:
  stage: lint
  image: python:3.9-slim
  before_script:
    - pip install -r requirements.txt
  script:
    - python -m flake8 app/ --max-line-length=120
    # Или для pylint:
    # - python -m pylint app/ --fail-under=7.0 || echo "Pylint completed"

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-cli
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY 2>/dev/null || echo "Login skipped"
  script:
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHA .
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHA $DOCKER_IMAGE:latest
  only:
    - main
  dependencies: []

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan -H $PRODUCTION_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "Deploying to production server..."
    - scp -o StrictHostKeyChecking=no -r . $PRODUCTION_SERVER:/opt/mortgage-calculator/
    - ssh -o StrictHostKeyChecking=no $PRODUCTION_SERVER "cd /opt/mortgage-calculator && docker-compose down && docker-compose up -d --build"
  environment:
    name: production
    url: http://$PRODUCTION_SERVER
  only:
    - main
  dependencies:
    - build