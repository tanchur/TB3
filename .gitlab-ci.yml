stages:
  - test
  - lint
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""

# Тестирование
test:
  stage: test
  image: python:3.9-slim
  before_script:
    - cd app
  script:
    - pip install -r ../requirements.txt
    - python -m pytest test_calculator.py -v

# Проверка кодстайла
lint:
  stage: lint
  image: python:3.9-slim
  before_script:
    - cd app
  script:
    - pip install -r ../requirements.txt
    - flake8 calculator.py test_calculator.py --max-line-length=120

# Сборка Docker образа
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

# Деплой на продуктовый сервер
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker stop mortgage-calculator || true"
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rm mortgage-calculator || true"
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d --name mortgage-calculator -p 80:5000 $CI_REGISTRY_IMAGE:latest"
  only:
    - main